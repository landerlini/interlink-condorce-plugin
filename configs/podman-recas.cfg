# Volumes and directories configuring access to executor-local data
[volumes]

### Area in the executor filesystem to be used for temporary files
scratch_area = "/tmp/interlink/scratch"

### Location to cache singularity images in the executor filesystem
apptainer_cachedir = "/tmp/interlink/cache"

### Location where to look for pre-built images
image_dir = "/tmp/interlink/images"

### Colon-separated list of directories to include in $PATH to look for executables
additional_directories_in_path = []

### Time in seconds between fuse mount and job execution
fuse_sleep_seconds = 15


# Options configuring the behavior of apptainer runtime
[apptainer]

### Relative or absolute path to apptainer, singularity or other compatible replacements
executable = "/usr/bin/singularity"

### Enables --fakeroot in apptainer exec/run commands
fakeroot = false

### Enables --containall flag in apptainer exec/run commands
containall = false

### Define the technique to mount fuse volumes to adopt on the host.

fuse_mode = "host-privileged"

### Do not propagate umask to the container, set default 0022 umask
no_init = false

### Do not bind home by default
no_home = true

### Drop all privileges from root user in container
no_privs = false

### Enable nVidia GPU support
nvidia_support = false

### Clean the environment of the spawned container
cleanenv = true

### Unsquash
unsquash = false

# Options configuring the behavior of apptainer runtime
# Options configuring the behavior of apptainer runtime
[slurm]

sandbox = "/tmp/interlink/sandbox"

sbatch_executable = "/usr/local/bin/sbatch"

squeue_executable = "/usr/local/bin/squeue"

bash_executable = "/usr/bin/bash"

# Add your flavors here as an array of tables.
[[slurm.flavors]]
partition = "pippo"
account = "pluto"
generic_resources = []
max_time_seconds = 1000
max_resources = { "nvidia.com/gpu" = 0 }

[[slurm.flavors]]
partition = "pippogpu"
account = "plutogpu"
generic_resources = ["gpu:1"]
max_time_seconds = 1000
max_resources = { "nvidia.com/gpu" = 1 }

# Proxy to download pre-build Docker Images instead of rebuilding at each execution
[shub_proxy]

### shub proxy instance used to retrieve cached singularity images. Without protocol!
server = ""

### Master token of the proxy used to request and generate client tokens
master_token = ""