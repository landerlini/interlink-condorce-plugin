{{ if .Values.natsBastionAuthorizedKeys }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-keys
  namespace: {{ .Release.Namespace }}
data:
  bastion: {{ .Values.natsBastionAuthorizedKeys | toJson }}

---
{{ end }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: {{ .Release.Namespace }}
data:
  nats-server-conf: |
    websocket 
    {
      no_tls: True
      username: {{ .Values.natsWebSocketUsername | required "Missing natsWebSocketUsername in values" }}
      password: {{ .Values.natsWebSocketPassword | required "Missing natsWebSocketPassword in values" }}
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh-nats-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ssh-nats

  template:
    metadata:
      labels:
        app: ssh-nats
    spec:
      containers:
        {{ if .Values.natsBastionAuthorizedKeys }}
        - name: openssh-server
          image: {{ .Values.natsBastionImage | default "binlab/bastion:latest" }}
          ports:
            - containerPort: 22

          env:
            - name: PUBKEY_AUTHENTICATION
              value: "true"
            - name: PERMIT_TUNNEL
              value: "false"
            - name: X11_FORWARDING
              value: "false"
            - name: TCP_FORWARDING
              value: "true"
            - name: AGENT_FORWARDING
              value: "false"
            - name: LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: LISTEN_PORT
              value: "22"
            - name: AUTHORIZED_KEYS
              value: /var/lib/bastion/authorized_keys

          volumeMounts:
            - name: authorized-keys
              mountPath: /var/lib/
              readOnly: true
            - name: bastion
              mountPath: /usr/etc/ssh
        {{ end }}


        - name: nats-server
          image: nats:latest
          ports:
            - containerPort: 4222
            - containerPort: 8080
          volumeMounts:
            - name: nats-config
              mountPath: /etc/nats
      volumes:
        - name: nats-config
          configMap:
            name: nats-config
            items:
              - key: nats-server-conf
                path: nats-server.conf
        - name: bastion
          hostPath:
            path: /opt/ssh-bastion
            type: DirectoryOrCreate
        {{ if .Values.natsBastionAuthorizedKeys }}
        - name: authorized-keys
          configMap:
            name: auth-keys
            items:
              - key: bastion
                path: bastion/authorized_keys
        {{ end }}

---

{{ if .Values.natsBastionAuthorizedKeys }}
apiVersion: v1
kind: Service
metadata:
  name: ssh-nats-service
spec:
  selector:
    app: ssh-nats

  type: NodePort
  ports:
    - protocol: TCP
      port: {{ .Values.natsBastionPort }}
      targetPort: 22
      nodePort: {{ .Values.natsBastionPort }}

---
{{ end }}

apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: ssh-nats

  type: ClusterIP
  ports:
    - name: nats
      protocol: TCP
      targetPort: 4222
      port: 4222
    - name: websocket
      protocol: TCP
      targetPort: 8080
      port: 8080

