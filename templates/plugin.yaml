################################################################################
## Container plugin


apiVersion: apps/v1
kind: Deployment
metadata:
  name: condor-plugin
  namespace: {{ .Release.Namespace }}
  labels:
    app: interlink
    component: condor-plugin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: interlink
      component: condor-plugin
  template:
    metadata:
      labels:
        app: interlink
        component: condor-plugin
    spec:
      securityContext:
        # Copy-pasted from https://github.com/kubernetes/git-sync/blob/master/docs/kubernetes.md
        fsGroup: 101

      containers:
        - name: interlink
          image: {{ .Values.pluginDockerImage | default "landerlini/interlink-condorce-plugin:v0.0" }}
          command: ["/bin/sh", "-c"]
          args: 
            - |
              cd /interlink/current
              python3 -m uvicorn main:app --reload --host 0.0.0.0 --log-level={{ .Values.pluginLogLevel | default "info" }} --port 8000

          env:
            - name: DEBUG
              value: {{ .Values.pluginDebug | default "true" | quote }}
            - name: TOKEN_VALIDITY_SECONDS
              value: {{ .Values.pluginTokenValiditySeconds | default 1200 | quote }}
            - name: CONDOR_POOL
              value: {{ .Values.pluginCondorPool | required "pluginCondorPool is missing (value for -pool arg)" }}
            - name: CONDOR_SCHEDULER_NAME
              value: {{ .Values.pluginCondorScheduler | required "pluginCondorPool is missing (value for -name arg)" }}
            - name: IAM_ISSUER
              value: {{ .Values.backendIamIssuer | required "backendIamIssuer is missing (this is the condor IAM)"}}
            - name: IAM_CLIENT_ID
              value: {{ .Values.backendIamClientId | required "backendIamClientId is missing (this is the condor IAM)"}}
            - name: IAM_CLIENT_SECRET
              value: {{ .Values.backendIamClientSecret | required "backendIamClientSecret is missing (this is the condor IAM)"}}
            - name: BEARER_TOKEN_PATH
              value: /interlink/token

          ports:
            - containerPort: 8000

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: {{ .Values.pluginLivenessInitialDelaySeconds | default 3  }} 
            periodSeconds: {{ .Values.pluginLivenessProbePeriodSeconds | default 3  }}


          volumeMounts:
            - name: interlink
              mountPath: /interlink
              readOnly: true

        - name: git-sync
          image: registry.k8s.io/git-sync/git-sync:v4.2.4
          args:
            - --repo={{ .Values.pluginRepository | default "https://github.com/landerlini/interlink-condorce-plugin" }}
            - --period={{ .Values.pluginGitSyncPeriod | default "5s" }}
            - --link=current
            - --root=/interlink
            - --webhook-url=http://localhost:8000/shutdown

          volumeMounts:
            - name: interlink
              mountPath: /interlink

        - name: refresh-token
          image: {{ .Values.inttwRefreshTokenImage | default "ghcr.io/intertwin-eu/interlink/virtual-kubelet-inttw-refresh:latest" }}
          imagePullPolicy: Always
          env:
            - name: IAM_TOKEN_ENDPOINT
              value: "{{ .Values.backendIamIssuer }}/token"
            - name: IAM_CLIENT_ID
              value: {{ .Values.backendIamClientId | required "Please provide `iamClientId`" }}
            - name: IAM_CLIENT_SECRET
              value: {{ .Values.backendIamClientSecret | required "Please provide `iamClientSecret`" }}
            - name: IAM_GRANT_TYPE
              value: {{ .Values.backendIamGrantType | default "authorization_code" }}
            - name: IAM_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-token
                  key: refresh-token
            - name: IAM_VK_AUD
              value: {{ .Values.backendIamAudience | default "users" }}
            - name: TOKEN_PATH
              value: /interlink/token
          command:
            - python3
            - /opt/refresh.py

          resources:
            limits:
              cpu: {{ .Values.backendRefreshTokenCpuLimit | default "200m" }}
              memory: {{ .Values.backendRefreshTokenMemoryLimit | default "500Mi" }}
            requests:
              cpu: {{ .Values.backendRefreshTokenCpuRequest  | default "10m" }}
              memory: {{ .Values.backendRefreshTokenMemoryRequest | default "100Mi" }}
          volumeMounts:
            - name: interlink
              mountPath: /interlink

      volumes:
        - name: interlink
          emptyDir:
            sizeLimit: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: condor-plugin
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: interlink
    component: condor-plugin
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000


